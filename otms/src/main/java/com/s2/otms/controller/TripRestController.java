package com.s2.otms.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import java.sql.Timestamp;
import java.util.Collections;
import com.s2.otms.repository.TripRepository;
import com.s2.otms.model.Trip;


@RestController    // This means that this class is a Rest Controller
public class TripRestController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private TripRepository tripRepository;

    @PostMapping(path="/trips") // Map ONLY POST Requests
	public @ResponseBody String addNewTrip (@RequestParam Integer empId
            , @RequestParam Timestamp startTime
            , @RequestParam Timestamp endTime
            , @RequestParam Integer distance
            , @RequestParam Float cost) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Trip t = new Trip();
        t.setEmpId(empId);
        t.setStartTime(startTime);
        t.setEndTime(endTime);
        t.setDistance(distance);
        t.setCost(cost);
		tripRepository.save(t);
		return "Trip Saved Successfully!";
    }
    
	@GetMapping(path="/trips", produces={"application/json"}) // Map ONLY GET Requests
	public @ResponseBody Iterable<Trip> getAllTrips(@RequestParam(value = "user", defaultValue = "anonymousUser") String user) {
		if ("anonymousUser".equals(user)) {
			return Collections.emptyList();
		}
		// if admin user, return all the trip records
		if("admin".equalsIgnoreCase(user)) {
			return tripRepository.findAll();
		}
		// if an ordinary user, return only the trip records of the logged in employee
		int empId=Integer.parseInt(user);  
		return tripRepository.findByEmpId(empId);
	}
}
